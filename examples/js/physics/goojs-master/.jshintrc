{
    // Settings
    "passfail"      : false,  // Stop on first error.
    "maxerr"        : 100,    // Maximum errors before stopping.

    // Predefined globals whom JSHint will ignore.
    "browser"       : true,   // Standard browser globals e.g. `window`, `document`.
    "node"          : true,
    "jquery"        : true,

    // Development.
    "debug"         : false,  // Allow debugger statements e.g. browser breakpoints.
    "devel"         : true,  // Allow developments statements e.g. `console.log();`.

    "globals": {  // Extra globals.
        "define": true,
        "require": true,

        // Jasmine globals.
        // It would be nice if JSHint could only assume that these globals
        // exists when checking the code in test/, not in src/.
        // I wonder if there's a way to do that.
        "jasmine": true,
        "describe": true,
        "xdescribe": true,
        "expect": true,
        "it": true,
        "xit": true,
        "beforeEach": true,
        "afterEach": true,
        "waitsFor": true,
        "spyOn": true,

		"Map": true,
		"Set": true
    },

    // The Good Parts.
    "asi"           : false,  // Tolerate Automatic Semicolon Insertion (no semicolons).
    "laxbreak"      : true,   // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
    "bitwise"       : true,   // Prohibit bitwise operators (&, |, ^, etc.).
    "boss"          : true,   // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
    "curly"         : true,   // Require {} for every new block or scope.
    "eqeqeq"        : true,   // Require triple equals i.e. `===`.
    "eqnull"        : false,  // Tolerate use of `== null`.
    "evil"          : false,  // Tolerate use of `eval`.
    "expr"          : false,  // Tolerate `ExpressionStatement` as Programs.
    "forin"         : false,  // Tolerate `for in` loops without `hasOwnPrototype`.
    "immed"         : true,   // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "latedef"       : true,   // Prohipit variable use before definition.
    "loopfunc"      : true,   // Allow functions to be defined within loops.
    "noarg"         : true,   // Prohibit use of `arguments.caller` and `arguments.callee`.
    "regexp"        : false,  // Prohibit `.` and `[^...]` in regular expressions.
    "regexdash"     : false,  // Tolerate unescaped last dash i.e. `[-...]`.
    "scripturl"     : true,   // Tolerate script-targeted URLs.
    "shadow"        : true,   // Allows re-define variables later in code e.g. `var x=1; x=2;`.
    "supernew"      : false,  // Tolerate `new function () { ... };` and `new Object;`.
    "undef"         : true,   // Require all non-global variables be declared before they are used.
	"strict"		: false,   // Require "use strict"

    // Personal styling preferences.
    "newcap"        : true,   // Require capitalization of all constructor functions e.g. `new F()`.
    "noempty"       : true,   // Prohibit use of empty blocks.
    "nonew"         : true,   // Prohibit use of constructors for side-effects.
    "nomen"         : false,  // Prohibit use of initial or trailing underbars in names.
    "onevar"        : false,  // Allow only one `var` statement per function.
    "plusplus"      : false,  // Prohibit use of `++` & `--`.
    "sub"           : false,  // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "trailing"      : true,   // Prohibit trailing whitespaces.
    "unused"        : true,   // Warns when you define and never use your variables.
    //"quotmark"      : "single", // Enforces the consistency of quotation marks

    // "white" and "indent" give lots of warnings.
    // We may want to enable them again once we clean up the more pressing issues.
    // The "white" and "indent" settings also don't work together in JSHint before 1.0
    // See https://github.com/jshint/jshint/issues/451
    "white"         : true,   // Check against strict whitespace and indentation rules.
    //"indent"        : 4,      // Specify indentation spacing
    "smarttabs"     : true    // Suppress warnings about mixed tabs and spaces
}
